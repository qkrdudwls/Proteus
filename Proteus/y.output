Grammar

    0 $accept: line $end

    1 line: expr '\n'

    2 expr: expr '+' expr
    3     | expr '-' expr
    4     | expr '*' expr
    5     | expr '/' expr
    6     | '(' expr ')'
    7     | '-' expr
    8     | __DIGIT__


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    '(' (40) 6
    ')' (41) 6
    '*' (42) 4
    '+' (43) 2
    '-' (45) 3 7
    '/' (47) 5
    error (256)
    __DIGIT__ (258) 8
    UMINUS (259)


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    line (13)
        on left: 1
        on right: 0
    expr (14)
        on left: 2 3 4 5 6 7 8
        on right: 1 2 3 4 5 6 7


State 0

    0 $accept: • line $end

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    line  go to state 4
    expr  go to state 5


State 1

    8 expr: __DIGIT__ •

    $default  reduce using rule 8 (expr)


State 2

    7 expr: '-' • expr

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    expr  go to state 6


State 3

    6 expr: '(' • expr ')'

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    expr  go to state 7


State 4

    0 $accept: line • $end

    $end  shift, and go to state 8


State 5

    1 line: expr • '\n'
    2 expr: expr • '+' expr
    3     | expr • '-' expr
    4     | expr • '*' expr
    5     | expr • '/' expr

    '-'   shift, and go to state 9
    '+'   shift, and go to state 10
    '*'   shift, and go to state 11
    '/'   shift, and go to state 12
    '\n'  shift, and go to state 13


State 6

    2 expr: expr • '+' expr
    3     | expr • '-' expr
    4     | expr • '*' expr
    5     | expr • '/' expr
    7     | '-' expr •

    $default  reduce using rule 7 (expr)


State 7

    2 expr: expr • '+' expr
    3     | expr • '-' expr
    4     | expr • '*' expr
    5     | expr • '/' expr
    6     | '(' expr • ')'

    '-'  shift, and go to state 9
    '+'  shift, and go to state 10
    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    ')'  shift, and go to state 14


State 8

    0 $accept: line $end •

    $default  accept


State 9

    3 expr: expr '-' • expr

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    expr  go to state 15


State 10

    2 expr: expr '+' • expr

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    expr  go to state 16


State 11

    4 expr: expr '*' • expr

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    expr  go to state 17


State 12

    5 expr: expr '/' • expr

    __DIGIT__  shift, and go to state 1
    '-'        shift, and go to state 2
    '('        shift, and go to state 3

    expr  go to state 18


State 13

    1 line: expr '\n' •

    $default  reduce using rule 1 (line)


State 14

    6 expr: '(' expr ')' •

    $default  reduce using rule 6 (expr)


State 15

    2 expr: expr • '+' expr
    3     | expr • '-' expr
    3     | expr '-' expr •
    4     | expr • '*' expr
    5     | expr • '/' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 3 (expr)


State 16

    2 expr: expr • '+' expr
    2     | expr '+' expr •
    3     | expr • '-' expr
    4     | expr • '*' expr
    5     | expr • '/' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 2 (expr)


State 17

    2 expr: expr • '+' expr
    3     | expr • '-' expr
    4     | expr • '*' expr
    4     | expr '*' expr •
    5     | expr • '/' expr

    $default  reduce using rule 4 (expr)


State 18

    2 expr: expr • '+' expr
    3     | expr • '-' expr
    4     | expr • '*' expr
    5     | expr • '/' expr
    5     | expr '/' expr •

    $default  reduce using rule 5 (expr)
